<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Development Worklog]]></title>
    <url>%2F2017%2F06%2F25%2FDevelopment-worklog%2F</url>
    <content type="text"><![CDATA[So right now my role at IBM Cloud team is Cloud security development with a focus on Identity and Access Management. What is IBMidIBMid is an ID that is used to log into IBM applications and offerings to engage IBM digitally. IBM Identity Service (blueID) is the cloud based identity access and management solution, it provides identity and single sign-on services for IBM applications. What My role isMy main work is to interface IBM Cloud IdaaS (previously SoftLayer) with the existing IBM Paas (Bluemix). Things like token verification and exchange, Oauth, 2-Factor Authentication and API development is what I am doing, specifically for the actual user/customer within an Account. Checkout some info from IBM Cloud Identity Connect Languages and toolchainThe language I am using for the project is PHP (for general development), python (for some scripting job) and JavaScript (Node.js) for some other development work. I think this job allows me to get in touch with many important concepts like API development, IAM development, and code teamwork. (Jira, Jenkins and stuff). I also got a bunch of nice teammates like Don, Dennis, Ryan… It’s been fun.]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Experience with ES6]]></title>
    <url>%2F2017%2F03%2F19%2FExperience-with-ES6%2F</url>
    <content type="text"><![CDATA[IntroI’ve transformed my js codes into ES6 for a while in a few projects. Most of these projects are React Native related. I have to say using ES6 in RN projects is a big relief as the application of this, the new class declaration, the arrow function makes life a lot easier. ProjectBelow is the code I wrote with working on my graduation project. The key of writing RN in ES6 is to register functions in the class constructor. The code here is clean, easy to read and understand. Do remember that in RN, name a class with the first letter in UPPERCASE. Code123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168'use strict'import React, &#123; Component &#125; from 'react';import &#123; AppRegistry, StyleSheet, Text, View, StatusBar, ScrollView, ActivityIndicator, PixelRatio, Image, TouchableOpacity, Dimensions,&#125; from 'react-native';var currWindow = Dimensions.get('window');var silsLogo = require("../res/drawable/sils-logo.png");var Lightbox = require('react-native-lightbox');var aboutManning = require("./aboutApp/aboutManning.ios.js");var aboutSils = require("./aboutApp/aboutSils.ios.js");var contactSils = require("./aboutApp/contactSils.ios.js");if (PixelRatio.get()==2)&#123; var ratio = 2;&#125;else if (PixelRatio.get()==3)&#123; var ratio = 3;&#125;class AboutApp extends Component &#123; constructor(props)&#123; super(props); var loginData=this.props.data; this.state=&#123; userData: loginData, animateLoading: false, indicatorHeight:0 &#125; this._handleScroll = this._handleScroll.bind(this); this._aboutManning = this._aboutManning.bind(this); this._aboutSils = this._aboutSils.bind(this); this._doContact = this._doContact.bind(this); &#125; // handle scroll action of the scrollview _handleScroll(event: Object)&#123; if(event.nativeEvent.pageY&gt;200*ratio)&#123; event.preventDefault(); this.setState(&#123;indicatorHeight:20&#125;); this.setState(&#123;animateLoading:true&#125;); setTimeout( () =&gt; &#123; this.setState(&#123;indicatorHeight:0&#125;); this.setState(&#123;animateLoading:false&#125;);&#125;, 1000) &#125; &#125; _aboutSils()&#123; console.log("aboutSils"); this.props.navigator.push(&#123; component: aboutSils, title: 'About SILS', navigationBarHidden:false &#125;) &#125; _aboutManning()&#123; console.log("aboutManning"); this.props.navigator.push(&#123; component: aboutManning, title: 'About Manning Hall', navigationBarHidden:false &#125;) &#125; _doContact()&#123; console.log("Contact"); this.props.navigator.push(&#123; component: contactSils, title: 'Contact Us', navigationBarHidden:false &#125;) &#125; render() &#123; return ( &lt;Image style=&#123;styles.fitScreen&#125; source=&#123;require('../res/drawable/sils-white-bkg.jpeg')&#125;&gt; &lt;ScrollView onResponderRelease=&#123;this._handleScroll&#125; scrollEventThrottle=&#123;1&#125; &gt; &lt;View style=&#123;styles.container&#125;&gt; &lt;View style=&gt; &lt;ActivityIndicator animating=&#123;this.state.animateLoading&#125; size = 'large' color='#7BAFD4'/&gt; &lt;/View&gt; &lt;Lightbox springConfig= style= &gt; &lt;Image resizeMode="contain" style= source=&#123;silsLogo&#125; /&gt; &lt;/Lightbox&gt; &lt;View style=&gt; &lt;TouchableOpacity onPress=&#123;()=&gt;this._aboutManning()&#125;&gt; &lt;View style=&#123;styles.loginButtonBox&#125;&gt; &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;ABOUT MANNING HALL&lt;/Text&gt; &lt;/View&gt; &lt;/TouchableOpacity&gt; &lt;TouchableOpacity onPress=&#123;() =&gt; this._aboutSils()&#125;&gt; &lt;View style=&#123;styles.loginButtonBox&#125;&gt; &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;ABOUT SILS&lt;/Text&gt; &lt;/View&gt; &lt;/TouchableOpacity&gt; &lt;TouchableOpacity onPress=&#123;this._doContact&#125;&gt; &lt;View style=&#123;styles.loginButtonBox&#125;&gt; &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;CONTACT US&lt;/Text&gt; &lt;/View&gt; &lt;/TouchableOpacity&gt; &lt;Text style=&gt; Thank you for using this app to interact with Manning Hall, home of the School of Information and Library Science, UNC Chapel Hill, One of the top-ranked schools of library and information studies in the world. &lt;/Text&gt; &lt;/View&gt; &lt;/View&gt; &lt;/ScrollView&gt; &lt;/Image&gt; ); &#125;&#125;const styles = StyleSheet.create(&#123; container: &#123; flex: 1, justifyContent: 'center', alignItems: 'center', &#125;, fitScreen: &#123; marginTop:-1, width: currWindow.width, height: currWindow.height+1, &#125;, welcome: &#123; fontSize: 20, textAlign: 'center', margin: 10, &#125;, loginButtonBox:&#123; borderRadius: 10, marginTop: 10, opacity:0.85, width: currWindow.width*0.75, height: currWindow.width*0.18, backgroundColor:'#7BAFD4', alignItems: 'center', justifyContent: 'center', &#125;, loginButtonStr:&#123; fontSize: 8 * ratio, color:'white', fontFamily: 'Helvetica Neue', fontWeight: '300', backgroundColor:'transparent', &#125;,&#125;);module.exports = AboutApp; Even though I know that ES6 is not fully supported in many aspects of the js world. I’d say it brings me a lot joy when switch from JAVA to js and pick up ES6 in the first place.]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F1970%2F01%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[WELCOME TO MY SITE]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>welcome</tag>
      </tags>
  </entry>
</search>
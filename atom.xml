<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>That&#39;s the way the cookie crumbles</title>
  <subtitle>Opinions expressed are solely my own and do not express the views or opinions of my employer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-25T11:39:29.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhenwei (aka Antony) Wang &lt;br/&gt; 王振维</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Development Worklog</title>
    <link href="http://yoursite.com/2017/06/25/Development-worklog/"/>
    <id>http://yoursite.com/2017/06/25/Development-worklog/</id>
    <published>2017-06-25T11:33:45.000Z</published>
    <updated>2017-06-25T11:39:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>So right now my role at IBM Cloud team is Cloud security development with a focus on Identity and Access Management.<br><a id="more"></a></p>
<h2 id="What-is-IBMid"><a href="#What-is-IBMid" class="headerlink" title="What is IBMid"></a>What is IBMid</h2><p>IBMid is an ID that is used to log into IBM applications and offerings to engage IBM digitally. IBM Identity Service (blueID) is the cloud based identity access and management solution, it provides identity and single sign-on services for IBM applications.</p>
<h2 id="What-My-role-is"><a href="#What-My-role-is" class="headerlink" title="What My role is"></a>What My role is</h2><p>My main work is to interface IBM Cloud IdaaS (previously SoftLayer) with the existing IBM Paas (Bluemix). Things like token verification and exchange, Oauth, 2-Factor Authentication and API development is what I am doing, specifically for the actual user/customer within an Account. Checkout some info from <a href="https://www.ibm.com/us-en/marketplace/cloud-identity-connect?S_PKG=-&amp;cm_mmc=Search_Google-_-Security_Govern+users+and+their+access-_-WW_NA-_-iam+ibm_Exact_-&amp;cm_mmca1=000018ZN&amp;cm_mmca2=10005589&amp;mkwid=75fb4a80-3189-47fe-84b7-4101472cef5f|467|613043&amp;cvosrc=ppc.google.iam%20ibm&amp;cvo_campaign=Security_Govern%20users%20and%20their%20access-WW_NA&amp;cvo_crid=200070287176&amp;Matchtype=e" target="_blank" rel="external">IBM Cloud Identity Connect</a></p>
<h2 id="Languages-and-toolchain"><a href="#Languages-and-toolchain" class="headerlink" title="Languages and toolchain"></a>Languages and toolchain</h2><p>The language I am using for the project is PHP (for general development), python (for some scripting job) and JavaScript (Node.js) for some other development work.</p>
<p>I think this job allows me to get in touch with many important concepts like API development, IAM development, and code teamwork. (Jira, Jenkins and stuff). I also got a bunch of nice teammates like Don, Dennis, Ryan… It’s been fun.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;So right now my role at IBM Cloud team is Cloud security development with a focus on Identity and Access Management.&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Experience with ES6</title>
    <link href="http://yoursite.com/2017/03/19/Experience-with-ES6/"/>
    <id>http://yoursite.com/2017/03/19/Experience-with-ES6/</id>
    <published>2017-03-20T01:50:23.000Z</published>
    <updated>2017-06-25T04:12:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>I’ve transformed my js codes into ES6 for a while in a few projects. Most of these projects are React Native related. I have to say using ES6 in RN projects is a big relief as the application of this, the new class declaration, the arrow function makes life a lot easier.<br><a id="more"></a></p>
<h2 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h2><p>Below is the code I wrote with working on <a href="https://github.com/wangleibeckham/iPRED" target="_blank" rel="external">my graduation project</a>. The key of writing RN in ES6 is to register functions in the class constructor.</p>
<p>The code here is clean, easy to read and understand.</p>
<p>Do remember that in RN, name a class with the first letter in <em>UPPERCASE</em>.</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div></pre></td><td class="code"><pre><div class="line"><span class="meta">'use strict'</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</div><div class="line"><span class="keyword">import</span> &#123;</div><div class="line">  AppRegistry,</div><div class="line">  StyleSheet,</div><div class="line">  Text,</div><div class="line">  View,</div><div class="line">  StatusBar,</div><div class="line">  ScrollView,</div><div class="line">  ActivityIndicator,</div><div class="line">  PixelRatio,</div><div class="line">  Image,</div><div class="line">  TouchableOpacity,</div><div class="line">  Dimensions,</div><div class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</div><div class="line"></div><div class="line"><span class="keyword">var</span> currWindow = Dimensions.get(<span class="string">'window'</span>);</div><div class="line"><span class="keyword">var</span> silsLogo = <span class="built_in">require</span>(<span class="string">"../res/drawable/sils-logo.png"</span>);</div><div class="line"><span class="keyword">var</span> Lightbox = <span class="built_in">require</span>(<span class="string">'react-native-lightbox'</span>);</div><div class="line"><span class="keyword">var</span> aboutManning = <span class="built_in">require</span>(<span class="string">"./aboutApp/aboutManning.ios.js"</span>);</div><div class="line"><span class="keyword">var</span> aboutSils = <span class="built_in">require</span>(<span class="string">"./aboutApp/aboutSils.ios.js"</span>);</div><div class="line"><span class="keyword">var</span> contactSils = <span class="built_in">require</span>(<span class="string">"./aboutApp/contactSils.ios.js"</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (PixelRatio.get()==<span class="number">2</span>)&#123;</div><div class="line">  <span class="keyword">var</span> ratio = <span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> <span class="keyword">if</span> (PixelRatio.get()==<span class="number">3</span>)&#123;</div><div class="line">  <span class="keyword">var</span> ratio = <span class="number">3</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AboutApp</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</div><div class="line">  <span class="keyword">constructor</span>(props)&#123;</div><div class="line">    <span class="keyword">super</span>(props);</div><div class="line">    <span class="keyword">var</span> loginData=<span class="keyword">this</span>.props.data;</div><div class="line">    <span class="keyword">this</span>.state=&#123;</div><div class="line">      <span class="attr">userData</span>: loginData,</div><div class="line">      <span class="attr">animateLoading</span>: <span class="literal">false</span>,</div><div class="line">      <span class="attr">indicatorHeight</span>:<span class="number">0</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">this</span>._handleScroll = <span class="keyword">this</span>._handleScroll.bind(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">this</span>._aboutManning = <span class="keyword">this</span>._aboutManning.bind(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">this</span>._aboutSils = <span class="keyword">this</span>._aboutSils.bind(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">this</span>._doContact = <span class="keyword">this</span>._doContact.bind(<span class="keyword">this</span>);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// handle scroll action of the scrollview</span></div><div class="line">  _handleScroll(event: <span class="built_in">Object</span>)&#123;</div><div class="line">    <span class="keyword">if</span>(event.nativeEvent.pageY&gt;<span class="number">200</span>*ratio)&#123;</div><div class="line">      event.preventDefault();</div><div class="line">      <span class="keyword">this</span>.setState(&#123;<span class="attr">indicatorHeight</span>:<span class="number">20</span>&#125;);</div><div class="line">      <span class="keyword">this</span>.setState(&#123;<span class="attr">animateLoading</span>:<span class="literal">true</span>&#125;);</div><div class="line">      setTimeout(</div><div class="line">      <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">this</span>.setState(&#123;<span class="attr">indicatorHeight</span>:<span class="number">0</span>&#125;);</div><div class="line">        <span class="keyword">this</span>.setState(&#123;<span class="attr">animateLoading</span>:<span class="literal">false</span>&#125;);&#125;,</div><div class="line">      <span class="number">1000</span>)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  _aboutSils()&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"aboutSils"</span>);</div><div class="line">    <span class="keyword">this</span>.props.navigator.push(&#123;</div><div class="line">       <span class="attr">component</span>: aboutSils,</div><div class="line">       <span class="attr">title</span>: <span class="string">'About SILS'</span>,</div><div class="line">       <span class="attr">navigationBarHidden</span>:<span class="literal">false</span></div><div class="line">   &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  _aboutManning()&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"aboutManning"</span>);</div><div class="line">      <span class="keyword">this</span>.props.navigator.push(&#123;</div><div class="line">         <span class="attr">component</span>: aboutManning,</div><div class="line">         <span class="attr">title</span>: <span class="string">'About Manning Hall'</span>,</div><div class="line">         <span class="attr">navigationBarHidden</span>:<span class="literal">false</span></div><div class="line">     &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  _doContact()&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"Contact"</span>);</div><div class="line">    <span class="keyword">this</span>.props.navigator.push(&#123;</div><div class="line">       <span class="attr">component</span>: contactSils,</div><div class="line">       <span class="attr">title</span>: <span class="string">'Contact Us'</span>,</div><div class="line">       <span class="attr">navigationBarHidden</span>:<span class="literal">false</span></div><div class="line">   &#125;)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  render() &#123;</div><div class="line">    <span class="keyword">return</span> (</div><div class="line">      &lt;Image style=&#123;styles.fitScreen&#125; source=&#123;require('../res/drawable/sils-white-bkg.jpeg')&#125;&gt;</div><div class="line">      &lt;ScrollView onResponderRelease=&#123;this._handleScroll&#125; scrollEventThrottle=&#123;1&#125; &gt;</div><div class="line">      &lt;View style=&#123;styles.container&#125;&gt;</div><div class="line">      &lt;View style=&gt;</div><div class="line">      &lt;ActivityIndicator animating=&#123;this.state.animateLoading&#125; size = 'large' color='#7BAFD4'/&gt;</div><div class="line">      &lt;/View&gt;</div><div class="line"></div><div class="line">      &lt;Lightbox springConfig= style= &gt;</div><div class="line">        &lt;Image</div><div class="line">          resizeMode="contain"</div><div class="line">          style=</div><div class="line">          source=&#123;silsLogo&#125;</div><div class="line">        /&gt;</div><div class="line">      &lt;/Lightbox&gt;</div><div class="line"></div><div class="line">      &lt;View style=&gt;</div><div class="line">                  &lt;TouchableOpacity onPress=&#123;()=&gt;this._aboutManning()&#125;&gt;</div><div class="line">                       &lt;View style=&#123;styles.loginButtonBox&#125;&gt;</div><div class="line">                       &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;ABOUT MANNING HALL&lt;/Text&gt;</div><div class="line">                       &lt;/View&gt;</div><div class="line">                 &lt;/TouchableOpacity&gt;</div><div class="line">                 &lt;TouchableOpacity onPress=&#123;() =&gt; this._aboutSils()&#125;&gt;</div><div class="line">                      &lt;View style=&#123;styles.loginButtonBox&#125;&gt;</div><div class="line">                      &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;ABOUT SILS&lt;/Text&gt;</div><div class="line">                      &lt;/View&gt;</div><div class="line">                &lt;/TouchableOpacity&gt;</div><div class="line">                &lt;TouchableOpacity onPress=&#123;this._doContact&#125;&gt;</div><div class="line">                     &lt;View style=&#123;styles.loginButtonBox&#125;&gt;</div><div class="line">                     &lt;Text style =&#123;styles.loginButtonStr&#125;&gt;CONTACT US&lt;/Text&gt;</div><div class="line">                     &lt;/View&gt;</div><div class="line">               &lt;/TouchableOpacity&gt;</div><div class="line">        &lt;Text style=&gt;</div><div class="line">        Thank you for using this app to interact with Manning Hall, home of the School of Information and Library Science, UNC Chapel Hill, One of the top-ranked schools of library and information studies in the world.</div><div class="line">        &lt;/Text&gt;</div><div class="line">      &lt;/View&gt;</div><div class="line"></div><div class="line">      &lt;/View&gt;</div><div class="line">      &lt;/ScrollView&gt;</div><div class="line">      &lt;/Image&gt;</div><div class="line">    );</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">const styles = StyleSheet.create(&#123;</div><div class="line">  container: &#123;</div><div class="line">    flex: 1,</div><div class="line">    justifyContent: 'center',</div><div class="line">    alignItems: 'center',</div><div class="line">  &#125;,</div><div class="line">  fitScreen: &#123;</div><div class="line">    marginTop:-1,</div><div class="line">    width: currWindow.width,</div><div class="line">    height: currWindow.height+1,</div><div class="line">  &#125;,</div><div class="line">  welcome: &#123;</div><div class="line">    fontSize: 20,</div><div class="line">    textAlign: 'center',</div><div class="line">    margin: 10,</div><div class="line">  &#125;,</div><div class="line">  loginButtonBox:&#123;</div><div class="line">    borderRadius: 10,</div><div class="line">    marginTop: 10,</div><div class="line">    opacity:0.85,</div><div class="line">    width: currWindow.width*0.75,</div><div class="line">    height: currWindow.width*0.18,</div><div class="line">    backgroundColor:'#7BAFD4',</div><div class="line">    alignItems: 'center',</div><div class="line">    justifyContent: 'center',</div><div class="line">  &#125;,</div><div class="line">  loginButtonStr:&#123;</div><div class="line">    fontSize: 8 * ratio,</div><div class="line">    color:'white',</div><div class="line">    fontFamily: 'Helvetica Neue',</div><div class="line">    fontWeight: '300',</div><div class="line">    backgroundColor:'transparent',</div><div class="line">  &#125;,</div><div class="line">&#125;);</div><div class="line"></div><div class="line">module.exports = AboutApp;</div></pre></td></tr></table></figure>
<p>Even though I know that ES6 is not fully supported in many aspects of the js world. I’d say it brings me a lot joy when switch from JAVA to js and pick up ES6 in the first place.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Intro&quot;&gt;&lt;a href=&quot;#Intro&quot; class=&quot;headerlink&quot; title=&quot;Intro&quot;&gt;&lt;/a&gt;Intro&lt;/h2&gt;&lt;p&gt;I’ve transformed my js codes into ES6 for a while in a few projects. Most of these projects are React Native related. I have to say using ES6 in RN projects is a big relief as the application of this, the new class declaration, the arrow function makes life a lot easier.&lt;br&gt;
    
    </summary>
    
      <category term="blog" scheme="http://yoursite.com/categories/blog/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/1970/01/01/hello-world/"/>
    <id>http://yoursite.com/1970/01/01/hello-world/</id>
    <published>1970-01-01T05:00:00.000Z</published>
    <updated>2017-06-25T04:01:49.000Z</updated>
    
    <content type="html"><![CDATA[<center><br>        <p style="font-size:40px">WELCOME TO MY SITE</p><br></center>
]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;br&gt;        &lt;p style=&quot;font-size:40px&quot;&gt;WELCOME TO MY SITE&lt;/p&gt;&lt;br&gt;&lt;/center&gt;

    
    </summary>
    
      <category term="life" scheme="http://yoursite.com/categories/life/"/>
    
    
      <category term="welcome" scheme="http://yoursite.com/tags/welcome/"/>
    
  </entry>
  
</feed>
